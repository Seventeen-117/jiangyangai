# 消息服务配置
# 此文件包含默认配置，实际配置从Nacos配置中心读取

server:
  port: 8080

spring:
  application:
    name: messages-service
  profiles:
    active: dev
  cloud:
    nacos:
      config:
        enabled: true
        server-addr: ${NACOS_SERVER_ADDR:8.133.246.113:8848}
        file-extension: yml
        group: ${NACOS_CONFIG_GROUP:JIANGYANG}
        namespace: ${NACOS_NAMESPACE:}
        refresh-enabled: true

# 消息服务默认配置
# 这些配置会被Nacos配置中心的配置覆盖
message:
  service:
    # 消息服务类型：rocketmq, kafka, rabbitmq
    type: rocketmq
    
    # 是否启用消息轨迹追踪
    trace-enabled: false
    
    # 消息发送重试次数
    send-retry-times: 3
    
    # 消息发送超时时间（毫秒）
    send-timeout-ms: 3000
    
    # 最大批量发送消息数量
    max-batch-size: 100
    
    # RocketMQ配置
    rocketmq:
      enabled: false
      name-server: localhost:9876
      producer-group: DEFAULT_PRODUCER_GROUP
      consumer-group: DEFAULT_CONSUMER_GROUP
      compression-strategy: LZ4
      retry-sync-times: 3
      retry-async-times: 3
      queue-count-per-topic: 4
      message-retention-hours: 72
      send-msg-timeout: 3000
      compress-msg-body-over-howmuch: 4096
      max-message-size: 4194304
      enable-msg-trace: false
      trace-topic-name: RMQ_SYS_TRACE_TOPIC
    
    # Kafka配置
    kafka:
      enabled: false
      bootstrap-servers: localhost:9092
      consumer-group-id: DEFAULT_CONSUMER_GROUP
      acks: all
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      retries: 3
      auto-commit-interval-ms: 1000
      session-timeout-ms: 30000
      heartbeat-interval-ms: 3000
      max-poll-records: 500
      max-poll-interval-ms: 300000
    
    # RabbitMQ配置
    rabbitmq:
      enabled: false
      host: localhost
      port: 5672
      username: guest
      password: guest
      virtual-host: /
      connection-timeout: 60000
      channel-rpc-timeout: 10000
      requested-heart-beat: 60
      connection-recovery-interval: 10000
      automatic-recovery-enabled: true
      topology-recovery-enabled: true

# 日志配置
logging:
  level:
    com.jiangyang.messages: DEBUG
    org.springframework.cloud.context.config: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,configprops,env
  endpoint:
    health:
      show-details: always
    configprops:
      show-values: always
