transport {
  # tcp, unix-domain-socket
  type = "TCP"
  # NIO, NATIVE
  server = "NIO"
  # enable heartbeat
  heartbeat = true
  # enable client batch send request
  enable-client-batch-send-request = true
  # thread factory for netty
  thread-factory {
    boss-thread-prefix = "NettyBoss"
    worker-thread-prefix = "NettyServerNIOWorker"
    server-executor-thread-prefix = "NettyServerBizHandler"
    share-boss-worker = false
    client-selector-thread-prefix = "NettyClientSelector"
    client-selector-thread-size = 1
    client-worker-thread-prefix = "NettyClientWorkerThread"
    # netty boss thread size
    boss-thread-size = 1
    # auto default pin or 8
    worker-thread-size = 8
  }
  shutdown {
    # when destroy server, wait seconds
    wait = 3
  }
  # serialize
  serialization = "seata"
  # compressor
  compressor = "none"
}

service {
  # Transaction group mapping
  vgroupMapping.default_tx_group = "default"
  # only support when registry.type=file, please don't set multiple addresses
  default.grouplist = "8.133.246.113:8091"
  # degrade, current not support
  enableDegrade = false
  # disable seata
  disable = false
  max.commit.retry.timeout = "-1"
  max.rollback.retry.timeout = "-1"
}

client {
  # RM配置
  rm {
    async.commit.buffer.limit = 10000
    report.retry.count = 5
    table.meta.check.enable = false
    report.success.enable = true
    saga.branch.register.enable = true
    saga.json.parser = "fastjson"
    saga.retry.persist.mode.update = false
    saga.compensate.persist.mode.update = false
    lock {
      retry.internal = 10
      retry.times = 30
      retry.policy.branch-rollback-on-conflict = true
    }
  }
  # TM配置
  tm {
    commit.retry.count = 5
    rollback.retry.count = 5
    default-global-transaction-timeout = 60000
    degrade.check.period = 2000
    degrade.check = false
  }
  # AT模式锁配置
  undo {
    data.validation = true
    log.serialization = "jackson"
    log.save.days = 7
    log.delete.period = 86400000
    log.table = "undo_log"
    only.care.update.columns = true
  }
  log {
    exceptionRate = 100
  }
}

# 安全认证配置
security {
  # 是否开启安全验证
  auth-enabled = false
  # 安全验证类型
  auth-type = "file"
  # 访问密钥，可选
  access-key = ""
  # 安全密钥，可选
  secret-key = ""
}

# Saga状态机配置
saga {
  enabled = true
  state-machine {
    application-id = "bgai"
    transaction-name = "saga_tx"
    parallel-task-timeout = 60000
    retry {
      max-attempts = 3
      backoff-period = 1000
      max-period = 10000
    }
    repository-type = "db"
    auto-register = false
    resources = "classpath*:statelang/*.json"
  }
}

store {
  mode = "db"
  db {
    datasource = "druid"
    db-type = "mysql"
    driver-class-name = "com.mysql.cj.jdbc.Driver"
    url = "jdbc:mysql://8.133.246.113:3306/seata?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai"
    user = "bgtech"
    password = "Zly689258.."
    min-conn = 5
    max-conn = 30
    global.table = "global_table"
    branch.table = "branch_table"
    lock-table = "lock_table"
    query-limit = 100
    max-wait = 5000
  }
}

metrics {
  enabled = true
  registry-type = "compact"
  exporter-list = "prometheus"
  exporter-prometheus-port = 9898
}

support {
  spring {
    datasource.autoproxy = false
  }
} 